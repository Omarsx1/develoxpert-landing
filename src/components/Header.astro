---
import Toggle from "./Toggle.astro";

const navItems = [
  {
    title: "Inicio",
    label: "inicio",
    url: "/#inicio",
  },
  {
    title: "Servicios",
    label: "servicios",
    url: "/#servicios",
  },
  {
    title: "Acerca de",
    label: "acerca-de",
    url: "/#acerca-de",
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "/#contacto",
  },
];
---

<header
  id="landing-header"
  class="flex fixed top-0 z-10 items-center justify-center rounded-full w-full mx-auto mt-2"
>
  <div class="flex flex-grow">
    <!-- <a href="./"><Logo /></a> -->
    <img
      width="160"
      class="pl-9"
      src="/img/logo-w.png"
      alt="Logo Develoxpert"
    />
  </div>

  <nav
    class="flex flex-grow px-3 gap-8 text-md font-semibold  dark:text-white text-[#0e0f6d]"
  >
    {
      navItems.map((link) => (
        <a
          class="relative px-2 py-2 transition hover:border-black hover:text-[#00ff00] dark:hover:text-[#09f]"
          aria-label={link.label}
          href={link.url}
        >
          {link.title}
        </a>
      ))
    }
  </nav>
  <ul
    class="flex text-sm transition-colors duration-500 text-gray-500 dark:text-gray-400 font-medium px-2 py-0"
  >
    <Toggle />
  </ul>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section");
    const navitems = document.querySelectorAll("header nav a");

    const callback = (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navitems.forEach((item) => {
            if (item.getAttribute("aria-label") === entry.target.id) {
              item.classList.add("text-green-500");
            } else {
              item.classList.remove("text-green-500");
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    // Limpiar funciÃ³n
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      }
    };
  });
</script>

<style>
  header {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  @keyframes nav-shadown {
    to {
      @apply shadow-lg ring-1 backdrop-blur bg-gray-600/10 ring-white/10;
    }
  }
</style>
